---
# https://github.com/jonaswinkler/paperless-ng/blob/dev/.github/workflows/ci.yml
- name: install dev dependencies
  apt:
    pkg:
      - git
      - npm
      - gettext

- name: create temporary git directory
  tempfile:
    state: directory
  register: gitdir

- name: pull paperless-ng
  git:
    repo: https://github.com/jonaswinkler/paperless-ng.git
    dest: "{{ gitdir.path }}"
    version: "{{ paperlessng_version }}"
    refspec: "+refs/pull/*:refs/pull/*"

- name: compile frontend
  command:
    cmd: "{{ item }}"
  args:
    chdir: "{{ gitdir.path }}/src-ui"
  failed_when: false
  with_items:
    - npm install -g @angular/cli
    - npm install
    - ./node_modules/.bin/ng build --prod

- name: clean output directory
  file:
    path: "{{ gitdir.path }}/dist"
    state: absent

- name: create output directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ gitdir.path }}/dist"
    - "{{ gitdir.path }}/dist/paperless-ng"
    - "{{ gitdir.path }}/dist/paperless-ng/scripts"

- name: copy application into place
  copy:
    src: "{{ gitdir.path }}/{{ item.src }}"
    remote_src: yes
    dest: "{{ gitdir.path }}/dist/paperless-ng/{{ item.dest | default('') }}"
  with_items:
    - src: CONTRIBUTING.md
    - src: LICENSE
    - src: Pipfile
    - src: Pipfile.lock
    - src: README.md
    - src: requirements.txt
    - src: paperless.conf.example
      dest: "paperless.conf"

- name: glob all scripts
  find:
    paths: ["{{ gitdir.path }}/scripts/"]
    patterns:
      - "*.service"
      - "*.sh"
  register: glob

- name: copy scripts
  copy:
    src: "{{ item.path }}"
    remote_src: yes
    dest: "{{ gitdir.path }}/dist/paperless-ng/scripts/"
  with_items:
    - "{{ glob.files }}"

- name: copy sources
  command:
    cmd: "cp -r src/ dist/paperless-ng/src"
  args:
    chdir: "{{ gitdir.path }}"

- name: install paperlessng requirements
  pip:
    requirements: "{{ gitdir.path }}/requirements.txt"
    virtualenv: "{{ gitdir.path }}/.venv/"
    extra_args: --upgrade

- name: compile messages
  command: "{{ gitdir.path }}/.venv/bin/python3 manage.py compilemessages"
  args:
    chdir: "{{ gitdir.path }}/dist/paperless-ng/src/"

- name: collect static files
  command: "{{ gitdir.path }}/.venv/bin/python3 manage.py collectstatic --no-input"
  args:
    chdir: "{{ gitdir.path }}/dist/paperless-ng/src/"

- name: remove pycache directories
  shell: find . -name __pycache__ | xargs rm -r
  args:
    chdir: "{{ gitdir.path }}/dist/"

- name: package app
  archive:
    path: "{{ gitdir.path }}/dist/"
    dest: "{{ gitdir.path }}/paperless-ng-{{ paperlessng_commit }}.tar.xz"
    format: xz

- name: extract paperless-ng
  unarchive:
    src: "{{ gitdir.path }}/paperless-ng-{{ paperlessng_commit }}.tar.xz"
    remote_src: yes
    dest: "{{ tempdir.path }}"

- name: remove temporary git directory
  file:
    path: "{{ gitdir.path }}"
    state: absent
